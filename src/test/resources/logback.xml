<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="false" scanPeriod="30 seconds" debug="false">

	<property name="LOG_HOME" value="./logs/game" />
	<property name="console" value="${LOG_HOME}/start.out" />
	<property name="asyncDB" value="${LOG_HOME}/async_db/asyncdb_%d{yyyy-MM-dd}.log" />
	<property name="common" value="${LOG_HOME}/common/common" />
	<property name="dayLog" value="${LOG_HOME}/day_log/day_%d{yyyy-MM-dd}.log" />
	<property name="error" value="${LOG_HOME}/error/error_%d{yyyy-MM-dd}.log" />
	<property name="rtLog" value="${LOG_HOME}/rt_log/rt_%d{yyyy-MM-dd}.log" />
	<property name="opLog" value="${LOG_HOME}/op_log/op_%d{yyyy-MM-dd}.log" />

	<property name="pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] %m%n"/>
	<property name="charSet" value="UTF-8" />
	<property name="maxHistory" value="10" />

	<appender name="commonAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${common}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${common}.log.%i</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>20</maxIndex>
		</rollingPolicy>

		<triggeringPolicy  class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>20MB</maxFileSize>
		</triggeringPolicy>
		<encoder>
			<pattern>${pattern}</pattern>
			<charset>${charSet}</charset>
		</encoder>

		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="asyncCommon" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="commonAppender" />
	</appender>

	<appender name="dbAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${asyncDB}</FileNamePattern>
			<MaxHistory>${maxHistory}</MaxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${pattern}</pattern>
			<charset>${charSet}</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="asyncDB" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="dbAppender" />
	</appender>

	<appender name="dayLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${dayLog}</FileNamePattern>
			<MaxHistory>${maxHistory}</MaxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${pattern}</pattern>
			<charset>${charSet}</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="asyncDayLog" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="dayLog" />
	</appender>

	<appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${error}</FileNamePattern>
			<MaxHistory>${maxHistory}</MaxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${pattern}</pattern>
			<charset>${charSet}</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="asyncError" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="error" />
	</appender>

	<appender name="rtLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${rtLog}</FileNamePattern>
			<MaxHistory>${maxHistory}</MaxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${pattern}</pattern>
			<charset>${charSet}</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="asyncRtLog" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="rtLog" />
	</appender>

	<appender name="opLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${opLog}</FileNamePattern>
			<MaxHistory>${maxHistory}</MaxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${pattern}</pattern>
			<charset>${charSet}</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="asyncOpLog" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="opLog" />
	</appender>

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<target>System.out</target>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>${pattern}</pattern>
			<charset>${charSet}</charset>
		</layout>
	</appender>

	<appender name="console" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${console}</file>
		<encoder>
			<pattern>${pattern}</pattern>
			<charset>${charSet}</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<logger name="asyncDB" level="info" additivity="false">
		<appender-ref ref="asyncDB" />
		<appender-ref ref="asyncError" />
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="dayLog" level="info" additivity="false">
		<appender-ref ref="asyncDayLog" />
		<appender-ref ref="asyncError" />
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="rtLog" level="info" additivity="false">
		<appender-ref ref="asyncRtLog" />
		<appender-ref ref="asyncError" />
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="opLog" level="info" additivity="false">
		<appender-ref ref="asyncOpLog" />
		<appender-ref ref="asyncError" />
		<appender-ref ref="STDOUT" />
	</logger>

	<root level="info">
		<appender-ref ref="asyncCommon" />
		<appender-ref ref="asyncError" />
		<appender-ref ref="STDOUT" />
	</root>

</configuration>